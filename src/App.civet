"civet autoLet react jsxCode"

import viteLogo from "/vite.svg"
import reactLogo from "./react.svg"
import civetLogo from "./civet.png"

import {useState} from "react"
import {createUseStyles} from "react-jss"
import {motion} from "motion/react"


type Brand =
  src: HTMLImageElement["src"]
  href: HTMLAnchorElement["href"]
  color: React.CSSProperties["color"]
  animate?: boolean

type Brands =
  [key: string]: Brand

brands : Brands :=
  vite: 
    src: viteLogo
    href: "https://vite.dev"
    color: "#646cffaa"
  react: 
    src: reactLogo
    href: "https://react.dev"
    color: "#61dafbaa"
    animate: true
  civet: 
    src: civetLogo
    href: "https://civet.dev"
    color: "#8b4513aa"

useBrandStyles := createUseStyles Object.fromEntries  
  for name, info in brands
    . name,
    . "&:hover":
        filter: 
          `drop-shadow(0 0 2em ${info.color})`

Logo := ({name, src, href, animate=false}) =>
  classes := useBrandStyles()
  shared := 
    className: classes[name]
    src: src
    height: "96px"
    alt: `${name} logo`
  animation :=   
    animate:
      rotate: 360
    transition: 
      ease: "linear"
      repeat: Infinity
      duration: 20.0
  <a {href} target="_blank"> 
    if animate
      <motion.img {...shared, ...animation}>
    else
      <img {...shared}>

Logos := =>
  <div style={display: "flex", gap: "1.5rem", padding: "1.5rem"}>
    for name, info in brands
      <Logo key=name {name, ...info}>

Counter := =>
  [count, setCount] := useState 0
  [isHovered, setIsHovered] := useState false
  callbacks :=
    onClick : => setCount count+1
    onMouseEnter: => setIsHovered true
    onMouseLeave: => setIsHovered false
  style :=
    borderRadius: "0.5rem"
    borderWidth: "1px" 
    borderStyle: "solid"
    borderColor: if isHovered { "#646cff" } else { "transparent" }
    transition: "border-color 0.25s"
    padding: "0.6em 1.2em"
    fontSize: "1rem"
    fontWeight: "500"
    backgroundColor: "#f9f9f9"
    cursor: "pointer"
  <button {style} ...callbacks>
    `count is ${count}`

Hero := ({children}) =>
  <h1 style={margin: "2rem"}>
    children

Card := =>
  <div .card style={padding: "2em", textAlign: "center"}>
    <Counter>
    <p style={color: "#213547"}>
      "Edit " 
      <code>
        "src/App.civet"
      " and save to test HMR"

Footnote := =>
  <p .read-the-docs style={color: "#888"}>
    "Click on the Vite, React and Civet logos to learn more"

export default App := =>
  style : React.CSSProperties := 
    display: "flex"
    justifyContent: "center"
    alignItems: "center"
    flexDirection: "column"
    height: "100vh"
  <div {style}>
    <Logos>
    <Hero>
      "Vite + React + Civet"
    <Card>
    <Footnote>

